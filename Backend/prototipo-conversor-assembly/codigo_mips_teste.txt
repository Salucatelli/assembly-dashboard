# ... (código existente) ...

# --- Teste de SRL ---
# Valor inicial: 20 (binary 0...10100)
addi $s0, $zero, 20

# Deslocar 2 bits para a direita (lógico, preenche com zeros)
# 0...10100 >> 2 = 0...0101 (decimal 5)
srl $t0, $s0, 2          # $t0 = $s0 SRL 2 (Esperado: $t0 = 5)

# Valor inicial: -16 (binary 111...1111_0000)
addi $s1, $zero, -16

# Deslocar 4 bits para a direita (lógico, preenche com zeros no lado esquerdo)
# 111...1111_0000 >> 4 = 0000_1111...1111 (decimal 268435455, ou 0x0FFFFFFF)
srl $t1, $s1, 4          # $t1 = $s1 SRL 4 (Esperado: $t1 = 268435455)
                         # Note que se fosse sra, seria -1. Mas com srl, é um grande positivo.

# Valor inicial: 0x80000000 (decimal -2147483648)
addi $s2, $zero, -2147483648 # $s2 = 0x80000000

# Deslocar 1 bit para a direita (lógico)
# 1000...0000 >> 1 = 0100...0000 (decimal 1073741824)
srl $t2, $s2, 1          # $t2 = $s2 SRL 1 (Esperado: $t2 = 1073741824)

# Deslocar 0 bits (o valor deve permanecer o mesmo)
addi $s3, $zero, 999
srl $t3, $s3, 0          # $t3 = $s3 SRL 0 (Esperado: $t3 = 999)

# ... (restante do seu código assembly) ...